g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación 1')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'variación 2')
# g<-g + scale_color_manual(values=c('dif1'='blue', 'dif2'='chartreuse4'),
#                           breaks = c('dif1', 'dif2'),
#                           labels = c('variación 1', 'variación 2'))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
g<-ggplot(zzz, aes(x=fecha, y=dif1))
g<-g + geom_line(aes(colour='dif1'))
g<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = "identity", alpha=0.5, position = "identity")
g<-g + geom_hline(yintercept = 0, color='chartreuse4')
g<-g + scale_x_yearmon()
g<-g + scale_y_continuous(labels=percent)
g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación anual del consumo')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variación anual del consumo')
g<-g + scale_x_yearmon()
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
zzz<- zz %>% mutate(mes=factor(format(fecha, "%B"), levels = format(ISOdate(2000, 1:12, 1), "%B")))
g<-ggplot(zzz, aes(x=fecha, y=original))
g<-g + geom_line(colour='blue')
g<-g + facet_wrap(~ mes, nrow=1)
g<-g + stat_smooth(method = "lm", formula = y ~ 1, se = FALSE, colour = "red")
g<-g + scale_x_yearmon(limits=c(zz[1,1], zz[NROW(zz),1]))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
zzz<- zz %>% mutate(mes=factor(format(fecha, "%B"), levels = format(ISOdate(2000, 1:12, 1), "%B")))
g<-ggplot(zzz, aes(x=fecha, y=original))
g<-g + geom_line(colour='blue')
g<-g + facet_wrap(~ mes, nrow=1)
g<-g + stat_smooth(method = "lm", formula = y ~ 1, se = FALSE, colour = "blue")
g<-g + scale_x_yearmon(limits=c(zz[1,1], zz[NROW(zz),1]))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
max(zz$original)
max.col(zz$original)
g<-ggplot(zz)
g<-g + geom_line(aes(x=fecha, y=original, color='original'), size=0.5)
g<-g + geom_text(aes(x=fecha, y=original, label=outlier))
g<-g + geom_label(aes(x=fecha, y=original, label=outlier, color='outlier'))
g<-g + geom_line(aes(x=fecha, y=final, color='final'), size=1)
g<-g + geom_line(aes(x=fecha, y=trend, color='trend'), size=1.5)
g<-g + geom_line(aes(x=fecha, y=forecast, color='forecast'), size=1)
g<-g + geom_ribbon(aes(x=fecha, ymin = lowerci, ymax = upperci), fill = "grey70", alpha=0.5)
g<-g + scale_color_manual(values=c('original'='chartreuse4', 'final'='black', 'trend'='blue', 'forecast'='red', 'outlier'='orange1'),
breaks=c('original', 'final', 'trend', 'forecast', 'outlier'))
g<-g + scale_x_yearmon(limits=c(zz[1,1], zz[NROW(zz),1]))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
g<-ggplot(zzz, aes(x=fecha, y=dif1))
g<-g + geom_line(aes(colour='dif1'))
g<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = "identity", alpha=0.5, position = "identity")
g<-g + geom_hline(yintercept = 0, color='chartreuse4')
g<-g + scale_x_yearmon()
g<-g + scale_y_continuous(labels=percent)
g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación anual del consumo')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variación anual del consumo')
g<-g + scale_x_yearmon()
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
zzz<-zz %>%
mutate(dif1=(trend-lag(trend,12))/lag(trend,12)) %>%
mutate(dif2=dif1-lag(dif1,1))
g<-ggplot(zzz, aes(x=fecha, y=dif1))
g<-g + geom_line(aes(colour='dif1'))
g<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = "identity", alpha=0.5, position = "identity")
g<-g + geom_hline(yintercept = 0, color='chartreuse4')
g<-g + scale_x_yearmon()
g<-g + scale_y_continuous(labels=percent)
g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación anual del consumo')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variación anual del consumo')
g<-g + scale_x_yearmon()
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
g<-ggplot(zzz, aes(x=fecha, y=dif1))
g<-g + geom_line(aes(colour='dif1'))
g<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = "identity", alpha=0.5, position = "identity")
g<-g + geom_hline(yintercept = 0, color='chartreuse4')
g<-g + scale_x_yearmon()
g<-g + scale_y_continuous(labels=percent)
g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación anual del consumo')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variación anual del consumo')
g<-g + scale_x_yearmon()
g<-g+ggtitle(paste(paste('Consumo mensual', famItem, prodItem))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
g<-ggplot(zzz, aes(x=fecha, y=dif1))
g<-g + geom_line(aes(colour='dif1'))
g<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = "identity", alpha=0.5, position = "identity")
g<-g + geom_hline(yintercept = 0, color='chartreuse4')
g<-g + scale_x_yearmon()
g<-g + scale_y_continuous(labels=percent)
g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación anual del consumo')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variación anual del consumo')
g<-g + scale_x_yearmon()
g<-g + ggtitle(paste('Consumo mensual', famItem, prodItem))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
famItem<-"GNA"
prodItem<-'auto'
df<-ppg.df %>% filter(familia==famItem & producto==prodItem & tipo=="obs")
z<-zoo(x=filter(ppg.df,familia==famItem & producto==prodItem & tipo=="obs")[,5], order.by=pp.df$fecha)
fit<-seas(as.ts(z), forecast.save = "fct", forecast.probability = 0.95)
famItem<-"GSNA"
prodItem<-'auto'
df<-ppg.df %>% filter(familia==famItem & producto==prodItem & tipo=="obs")
z<-zoo(x=filter(ppg.df,familia==famItem & producto==prodItem & tipo=="obs")[,5], order.by=pp.df$fecha)
fit<-seas(as.ts(z), forecast.save = "fct", forecast.probability = 0.95)
zz<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
outlier=coredata(outlier(fit)),
original=coredata(original(fit)),
final=coredata(final(fit)),
trend=coredata(trend(fit)),
stringsAsFactors = FALSE)
zzf<-data.frame(fecha=as.character(as.yearmon(time(series(fit, 'forecast.forecasts')))),
series(fit, 'forecast.forecasts'),
stringsAsFactors = FALSE)
zz<- full_join(zz, zzf) %>% mutate(fecha=as.yearmon(fecha))
zzz<-zz %>%
mutate(dif1=(trend-lag(trend,12))/lag(trend,12)) %>%
mutate(dif2=dif1-lag(dif1,1))
g<-ggplot(zzz, aes(x=fecha, y=dif1))
g<-g + geom_line(aes(colour='dif1'))
g<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = "identity", alpha=0.5, position = "identity")
g<-g + geom_hline(yintercept = 0, color='chartreuse4')
g<-g + scale_x_yearmon()
g<-g + scale_y_continuous(labels=percent)
g<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variación anual del consumo')
g<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variación anual del consumo')
g<-g + scale_x_yearmon()
g<-g + ggtitle(paste('Consumo mensual', famItem, prodItem))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(pp.df)
?checkboxGroupInput
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
shiny::runApp()
?selectInput
shiny::runApp()
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ppg.df<-pp.df %>%
gather(key=gen.par, consumo.kt, -c(1:3)) %>%
separate(gen.par, into = c("familia", "producto"), sep = "\\.") %>%
mutate(tipo='obs') %>%
select(fecha, familia, producto, tipo, consumo.kt)
View(ppg.df)
famItem<-"GSNA"
prodItem<-'GS97'
df<-ppg.df %>% filter(familia==famItem & producto==prodItem & tipo=="obs")
z<-zoo(x=filter(ppg.df,familia==famItem & producto==prodItem & tipo=="obs")[,5], order.by=pp.df$fecha)
fit<-seas(as.ts(z), forecast.save = "fct", forecast.probability = 0.95)
zz<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
outlier=coredata(outlier(fit)),
original=coredata(original(fit)),
final=coredata(final(fit)),
trend=coredata(trend(fit)),
stringsAsFactors = FALSE)
as.character(as.yearmon(time(original(fit))))
length(as.character(as.yearmon(time(original(fit)))))
length(coredata(outlier(fit)))
length(coredata(original(fit)))
length(coredata(final(fit)))
length(coredata(trend(fit)))
plot(fit)
plot(original(fit))
fit$series$fct
fit$series
fit$data
head(fit$data)
length(original(fit))
zz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
original=coredata(original(fit)),
stringsAsFactors = FALSE)
nrow(zz0)
zz<-data.frame(fecha=as.character(as.yearmon(time(final(fit)))),
outlier=coredata(outlier(fit)),
final=coredata(final(fit)),
trend=coredata(trend(fit)),
stringsAsFactors = FALSE)
nrow(zz)
zz<- left_join(zz, zz0)
nrow(zz)
zzf<-data.frame(fecha=as.character(as.yearmon(time(series(fit, 'forecast.forecasts')))),
series(fit, 'forecast.forecasts'),
stringsAsFactors = FALSE)
View(zzf)
zz<- full_join(zz, zzf) %>% mutate(fecha=as.yearmon(fecha))
g<-ggplot(zz)
g<-g + geom_line(aes(x=fecha, y=original, color='original'), size=0.5)
g<-g + geom_text(aes(x=fecha, y=original, label=outlier))
g<-g + geom_label(aes(x=fecha, y=original, label=outlier, color='outlier'))
g<-g + geom_line(aes(x=fecha, y=final, color='final'), size=1)
g<-g + geom_line(aes(x=fecha, y=trend, color='trend'), size=1.5)
g<-g + geom_line(aes(x=fecha, y=forecast, color='forecast'), size=1)
g<-g + geom_ribbon(aes(x=fecha, ymin = lowerci, ymax = upperci), fill = "grey70", alpha=0.5)
g<-g + scale_color_manual(values=c('original'='chartreuse4', 'final'='black', 'trend'='blue', 'forecast'='red', 'outlier'='orange1'),
breaks=c('original', 'final', 'trend', 'forecast', 'outlier'))
g<-g + scale_x_yearmon(limits=c(zz[1,1], zz[NROW(zz),1]))
g<-g + theme(panel.background = element_rect(colour = "red"),
plot.title = element_text(size = 16, face='bold', color='blue'),
panel.grid.major= element_line(size = 0.25, colour = "red", linetype = "dotted"),
axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 14),
legend.title=element_blank())
g
shiny::runApp()
shiny::runApp()
z<-pp.df %>% select(fecha, -anyo, -mes, one_of("GOIL.goa"))
View(z)
z<-zoo(x = select(z, -fecha), order.by=z$fecha)
fit<-seas(as.ts(z), forecast.save = "fct", forecast.probability = 0.95)
zz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
original=coredata(original(fit)),
stringsAsFactors = FALSE)
zz<-data.frame(fecha=as.character(as.yearmon(time(final(fit)))),
outlier=coredata(outlier(fit)),
final=coredata(final(fit)),
trend=coredata(trend(fit)),
stringsAsFactors = FALSE)
zz<- left_join(zz, zz0)
zzf<-data.frame(fecha=as.character(as.yearmon(time(series(fit, 'forecast.forecasts')))),
series(fit, 'forecast.forecasts'),
stringsAsFactors = FALSE)
zz<- full_join(zz, zzf) %>% mutate(fecha=as.yearmon(fecha))
View(zz0)
head(coredata(original(fit)))
head(original(fit))
zz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
original=original(fit),
stringsAsFactors = FALSE)
drop(original(fit))
drop(coredata(original(fit)))
zz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
original=drop(coredata(original(fit))),
stringsAsFactors = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
z<-pp.df %>% select(fecha, -anyo, -mes, one_of("GLP.otros"))
z<-zoo(x = select(z, -fecha), order.by=z$fecha)
fit<-seas(as.ts(z), forecast.save = "fct", forecast.probability = 0.95)
plot(z)
?na.approx
?na.approx.zoo
na.locf(z)
z<-na.locf(z)
plot(z)
fit<-seas(as.ts(z), forecast.save = "fct", forecast.probability = 0.95)
shiny::runApp()
?full_join
shiny::runApp()
zz<- left_join(zz, zz0)
zz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),
original=drop(coredata(original(fit))),
stringsAsFactors = FALSE)
zz<-data.frame(fecha=as.character(as.yearmon(time(final(fit)))),
outlier=coredata(outlier(fit)),
final=coredata(final(fit)),
trend=coredata(trend(fit)),
stringsAsFactors = FALSE)
zz<- left_join(zz, zz0, by='fecha')
shiny::runApp()
shiny::runApp()
shiny::runApp()
require(openxlsx, quietly = TRUE)
require(dplyr, quietly = TRUE)
require(zoo, quietly = TRUE)
require(tidyr, quietly = TRUE)
xls.file<-"../CORES/consumos.xlsx"
download.file("http://www.cores.es/sites/default/files/archivos/estadisticas/consumos-pp-ccaa-provincias.xlsx",
xls.file, mode = "wb")
df<-read.xlsx("../CORES/consumos.xlsx", sheet="Consumos", startRow = 6)
df<-filter(df, Año > 1997 & Año < 2020)
df<-select(df, -contains("bio"))
names(df)<-c("Anyo","Mes","CCAA","Provincia","GS97","GS95","GS98","GOA","GOB","GOC","FOBIA")
df<-mutate(df, fecha=as.yearmon(paste0(Mes,Anyo)))
df<-select(df, c(12,3:11))
View(df)
df[is.na(df)] <- 0
df[,4:10]<-df[,4:10]/1000
saveRDS(df, file = 'consumos-pp-ccaa-provincias.RDS')
saveRDS(df, file = '../shinyCORES/data/consumos-pp-ccaa-provincias.RDS')
xls.file<-"../CORES/consumos-pp.xlsx"
download.file("http://www.cores.es/sites/default/files/archivos/estadisticas/consumos-pp.xlsx",
xls.file, mode = "wb")
dftemp<-read.xlsx(xls.file, sheet="GLPs", startRow = 6)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<-c("anyo", "mes", "GLP.envasado", "GLP.granel", "GLP.automocion", "GLP.otros", "GLP.total")
pp.df<-dftemp
dftemp<-read.xlsx(xls.file, sheet = "Gasolinas", startRow = 6, cols = 1:11)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GSNA.GS97','GSNA.GS95','GSNA.GS98','GSNA.bioetanol','GSNA.mezcla',
'GSNA.auto','GSNA.aviacion','GSNA.otras','GSNA.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','KERO.aviacion','KERO.otros','KERO.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Gasoleos", startRow = 6, cols = 1:10)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GOIL.goa','GOIL.biodiesel','GOIL.biomezcla',
'GOIL.auto','GOIL.gob','GOIL.goc','GOIL.otros','GOIL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Fueloleos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','FUEL.fo1','FUEL.fo2','FUEL.fobia',
'FUEL.otros','FUEL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Otros Productos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','OTROS.lubricantes','OTROS.asfalto',
'OTROS.coque','OTROS.otros','OTROS.total')
pp.df<-merge(pp.df, dftemp)
pp.df<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything()) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -c(1:3))
saveRDS(pp.df, file = '../shinyCORES/data/consumos-pp.RDS')
shiny::runApp()
?pbinom
pbinom(45, 50, 0.9)
pbinom(45, 50, 0.9, lower.tail = FALSE)
pbinom(45, 49, 0.9, lower.tail = FALSE)
pbinom(45, 48, 0.9, lower.tail = FALSE)
pbinom(45, 47, 0.9, lower.tail = FALSE)
pnorm(0.5, mean=11, sd=1.5)
pnorm(9.5, mean=11, sd=1.5)
pnorm(15.5, mean=11, sd=1.5)
1-pnorm(15.5, mean=11, sd=1.5)
qnorm(0.5, mean=11, sd=1.5)
qnorm(.9985, mean=11, sd=1.5)
qnorm(.0015, mean=11, sd=1.5)
qnorm(c(0.015, 0.025,0.16, 0.5, 84, 0.975, 0.985), mean=266, sd=16)
qnorm(c(0.015, 0.025,0.16, 0.5, 0.84, 0.975, 0.985), mean=266, sd=16)
pnorm(c(266-3*16, 266-2*16, 266-16, 266, 266+16, 266+2*16, 266+3*16), mean=266, sd=16)
qnorm(c(0.0015, 0.025,0.16, 0.5, 0.84, 0.975, 0.9985), mean=266, sd=16)
pnorm(13, mean=11, sd=1.5, low=T)
pnorm(13, mean=11, sd=1.5, low=F)
qnorm(0.47)
pnorm(0.47)
pnorm(0)
pnorm(1)
pnorm(-1)
pnorm(-1.47)
pnorm(-1.47)
pnorm(-1.05)
pnorm(2.5)-pnorm(-1.5)
pnorm(2.55, low=F)
qnorm(0.01)
qnorm(0.15. low=F)
qnorm(0.15, low=F)
qnorm(0.015, low=F)
pnorm(700, mean=507, sd=111, low=F)
pnorm(600, mean=507, sd=111, low=T) -pnorm(400, mean=507, sd=111, low=T)
qnorm(0.04, mean=11, sd=1.5, low=T)
qnorm(0.1, mean=11, sd=1.5, low=F)
qnorm(0.3, low=T)
qnorm(8.3, low=T)
qnorm(0.8, low=T)
qnorm(0.3, low=F)
qnorm(0.98, low=T)
507 +2.0537*111
pbinom(8, 20, 0.5)
pbinom(30, 225, 0.1, low=F)
pnorm(30.5, mean=22.5, sd=14.23, low=F)
pnorm(30., mean=22.5, sd=14.23, low=F)
pnorm(30., mean=22.5, sd=4.5, low=F)
pnorm(30.5, mean=22.5, sd=4.5, low=F)
pnorm(29.5, mean=22.5, sd=4.5, low=F)
pnorm(31, mean=22.5, sd=4.5, low=F)
pnorm(30.5, mean=22.5, sd=4.5, low=F)
qnorm(0.99)
qnorm(0.9)
qnorm(0.16)
qnorm(0.95)
qnorm(0.975)
qnorm(0.995)
2.576 * sqr(0.5433*(1-0.5433)/1040)
2.576 * sqrt(0.5433*(1-0.5433)/1040)
?t
?ts
2 * sqrt(0.56*(1-0.56)/1000)
2 * sqrt(0.56*(1-0.56)/1000)
t.test(1:100)
t.test(rnorm(100))
z.test
pnorm(2)
pnorm(2, lower.tail = F)
pnorm(-2)
316*0.035
sqrt(0.035*(1-0.035)/316)
(0.127-0.035)/sqrt(0.035*(1-0.035)/316)
(0.195-0.2)/sqrt(0.2*(1-0.2)/400)
source('~/RProjects/CORES/ShinyRDS.R', encoding = 'UTF-8', echo=TRUE)
View(pp.df)
shiny::runApp()
View(df)
View(pp.df)
shiny::runApp()
View(df)
fechas1.rango
fechas1.rango[2]
floor(fechas1.rango[2])
?floor
ceiling(fechas1.rango[2])
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
