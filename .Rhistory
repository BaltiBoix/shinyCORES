shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?tolower
require(openxlsx, quietly = TRUE)
require(dplyr, quietly = TRUE)
require(ggplot2, quietly = TRUE)
require(tidyr, quietly = TRUE)
xls.file<-"../CORES/consumos-pp.xlsx"
if(!file.exists("consumos-pp.xlsx"))
download.file("http://www.cores.es/sites/default/files/archivos/estadisticas/consumos-pp.xlsx",
xls.file, mode = "wb")
dftemp<-read.xlsx(xls.file, sheet="GLPs", startRow = 6)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
??str_replace_all
require(stringr, quietly = TRUE)
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
names(dftemp)[3:7]<-c("glpenvasado", "glpgranel", "glpautomocion", "glpotros", "totalglps")
df<-dftemp
View(df)
dftemp<-read.xlsx(xls.file, sheet = "Gasolinas", startRow = 6, cols = 1:11)
View(dftemp)
dftemp<-filter(dftemp, Mes != "")
View(dftemp)
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
names(dftemp)[11]<-"totalgasolinas"
df<-merge(df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
names(dftemp)[3:5]<-c("kerosenoaviacion", "kerosenootros", "totalkerosenos")
df<-merge(df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Gasoleos", startRow = 6, cols = 1:10)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
names(dftemp)[10]<-"totalgasoleos"
df<-merge(df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Fueloleos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
names(dftemp)[7]<-"totalfueloleos"
df<-merge(df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Otros Productos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- tolower(str_replace_all(names(dftemp), "[^[:alnum:]]", ""))
names(dftemp)[7]<-"totalotros"
df<-merge(df, dftemp)
names(df)<- str_replace_all(names(df), "ó", "o")
a<-data.frame(x=c('1','2','3'), y=c('4','5','6'))
a
a<-data.frame(x=c('1','2','3'), y=c('4','5','6'), stringsAsFactors = FALSE)
sapply(a, function(x) as.numeric(x))
b<-sapply(a, function(x) as.numeric(x))
b<-apply(a, function(x) as.numeric(x))
?apply
b<-apply(a, 2, function(x) as.numeric(x))
b
class(b)
b<-lapply(a, 2, function(x) as.numeric(x))
?lapply
?sapply
?LETTERS
LETTERS(1:10)
?LETTERS
LETTERS[1:10]
a <- as.data.frame(matrix(1:40, ncol=10)) %>%
mutate(name=LETTERS[1:4]) %>%
mutate(mean=rowMeans(.[,1:10]))
a
a<-data.frame(x=c('1','2','3'), y=c('4','5','6'), stringsAsFactors = FALSE)
b<- a %>% mutate_each(as.numeric)
b<- a %>% mutate_each(funs(as.numeric))
?setNames
dftemp<- df %>% mutate_each(funs(as.numeric))
View(dftemp)
?mutate_each
dftemp<- df %>% mutate_each(funs(removeNAs = ifelse(is.na(.), 0, .)))
dftemp<- df %>% mutate_each(funs(removeNAs = ifelse(is.na(.), 0, .))) %>% mutate_each(funs(as.numeric))
dftemp<- df %>% mutate_each(funs(removeNAs = ifelse(is.na(.), 0, .)))
dftemp<- df %>% mutate_each(funs(removeNAs = ifelse(is.na(.), 0, .))) %>% mutate_each(funs(as.numeric), -1, -2)
dftemp<- df %>% mutate_each(funs(removeNAs = ifelse(is.na(.), 0, .))) %>% mutate_each(funs(as.numeric), -1:2)
-c(1:2)
dftemp<- df %>% mutate_each(funs(removeNAs = ifelse(is.na(.), 0, .))) %>% mutate_each(funs(as.numeric), -c(1:2))
dftemp<- df %>%
mutate_each(funs(removeNAs = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2))
View(dftemp)
as.yearmon(paste(df[1,2], df[1,1]))
require(zoo, quietly = TRUE)
as.yearmon(paste(df[1,2], df[1,1]))
dftemp<- df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, año))) %>%
arrange(fecha)
dftemp<- df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, año))) %>%
arrange(fecha) %>%
select(fecha, everything())
?arrange
dftemp<-read.xlsx(xls.file, sheet="GLPs", startRow = 6)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)
c("anyo", "mes", "GLP.envasado", "GLP.granel", "GLP.automocion", "GLP.otros", "GLP.total")
dftemp<-read.xlsx(xls.file, sheet = "Gasolinas", startRow = 6, cols = 1:11)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)
paste(names(dftemp))
?paste
paste(names(dftemp), sep=',', collapse = T)
paste(names(dftemp), collapse = ',')
tolower(paste(names(dftemp), collapse = ','))
c(anyo,mes,GSNA.GS97,GSNA.GS95,GSNA.GS98,GSNA.bioetanol,GSNA.mezcla,GSNA.auto,GSNA.aviacion,GSNA.otras,GSNA.total)
c('anyo','mes','GSNA.GS97','GSNA.GS95','GSNA.GS98','GSNA.bioetanol','GSNA.mezcla','GSNA.auto','GSNA.aviacion','GSNA.otras','GSNA.total')
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
tolower(paste("'",names(dftemp),"'", collapse = ','))
c(' año ',' mes ',' aviación ',' otros ',' total ')
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
tolower(paste("'",names(dftemp),"'", collapse = ','))
tolower(paste0("'",names(dftemp),"'", collapse = ','))
c('anyo','mes','KERO.aviación','KERO.otros','KERO.total')
c('anyo','mes','KERO.aviacion','KERO.otros','KERO.total')
dftemp<-read.xlsx(xls.file, sheet = "Gasoleos", startRow = 6, cols = 1:10)
dftemp<-filter(dftemp, Mes != "")
tolower(paste0("'",names(dftemp),"'", collapse = ','))
c('anyo','mes','GOIL.goa','GOIL.biodiesel','GOIL.biomezcla','GOIL.auto','GOIL.gob','GOIL.goc','GOIL.otros','GOIL.total')
dftemp<-read.xlsx(xls.file, sheet = "Fueloleos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
tolower(paste0("'",names(dftemp),"'", collapse = ','))
dftemp<-read.xlsx(xls.file, sheet = "Otros Productos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
tolower(paste0("'",names(dftemp),"'", collapse = ','))
xls.file<-"../CORES/consumos-pp.xlsx"
dftemp<-read.xlsx(xls.file, sheet="GLPs", startRow = 6)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<-c("anyo", "mes", "GLP.envasado", "GLP.granel", "GLP.automocion", "GLP.otros", "GLP.total")
pp.df<-dftemp
dftemp<-read.xlsx(xls.file, sheet = "Gasolinas", startRow = 6, cols = 1:11)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GSNA.GS97','GSNA.GS95','GSNA.GS98','GSNA.bioetanol','GSNA.mezcla',
'GSNA.auto','GSNA.aviacion','GSNA.otras','GSNA.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','KERO.aviacion','KERO.otros','KERO.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Gasoleos", startRow = 6, cols = 1:10)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GOIL.goa','GOIL.biodiesel','GOIL.biomezcla',
'GOIL.auto','GOIL.gob','GOIL.goc','GOIL.otros','GOIL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Fueloleos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','FUEL.fo1','FUEL.fo2','FUEL.fobia',
'FUEL.otros','FUEL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Otros Productos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','OTROS.lubricantes','OTROS.asfalto',
'OTROS.coque','OTROS.otros','OTROS.total')
pp.df<-merge(pp.df, dftemp)
pp.df<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, año))) %>%
arrange(fecha) %>%
select(fecha, everything())
saveRDS(pp.df, file = 'data/consumos-pp.RDS')
dftemp<-read.xlsx(xls.file, sheet="GLPs", startRow = 6)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<-c("anyo", "mes", "GLP.envasado", "GLP.granel", "GLP.automocion", "GLP.otros", "GLP.total")
pp.df<-dftemp
dftemp<-read.xlsx(xls.file, sheet = "Gasolinas", startRow = 6, cols = 1:11)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GSNA.GS97','GSNA.GS95','GSNA.GS98','GSNA.bioetanol','GSNA.mezcla',
'GSNA.auto','GSNA.aviacion','GSNA.otras','GSNA.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','KERO.aviacion','KERO.otros','KERO.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Gasoleos", startRow = 6, cols = 1:10)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GOIL.goa','GOIL.biodiesel','GOIL.biomezcla',
'GOIL.auto','GOIL.gob','GOIL.goc','GOIL.otros','GOIL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Fueloleos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','FUEL.fo1','FUEL.fo2','FUEL.fobia',
'FUEL.otros','FUEL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Otros Productos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','OTROS.lubricantes','OTROS.asfalto',
'OTROS.coque','OTROS.otros','OTROS.total')
pp.df<-merge(pp.df, dftemp)
pp.df<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything())
saveRDS(pp.df, file = 'data/consumos-pp.RDS')
rm(df, dftemp)
rm(df)
View(pp.df)
ppg.df<-pp.df %>%
gather(key=gen.par, consumo.t, -c(1:3))
View(ppg.df)
ppg.df<-pp.df %>%
gather(key=gen.par, consumo.t, -c(1:3)) %>%
separate(gen.par, into = c("familia", "producto"), sep = "\\.")
ppg.df<-pp.df %>%
gather(key=gen.par, consumo.t, -c(1:3)) %>%
separate(gen.par, into = c("familia", "producto"), sep = "\\.")
ppg.df<-pp.df %>%
gather(key=gen.par, consumo.t, -c(1:3)) %>%
separate(gen.par, into = c("familia", "producto"), sep = "\\.") %>%
mutate(consumo.kt=ifelse(is.na(consumo.t), NA, consumo.t/1000)) %>%
select(-anyo, -mes, -consumo.t)
zpp<-zoo(pp.df %>%)
zpp<-pp.df %>% select(-anyo, -mes, ends_with('.total'))
zpp<-pp.df %>% select(-anyo, -mes, ends_with('.total'))
View(zpp)
zpp<-pp.df %>% select(-anyo, -mes, ends_with(".total"))
zpp<-pp.df %>% select(-anyo, -mes, ends_with("total"))
zpp<-pp.df %>% select(fecha, -anyo, -mes, ends_with("total"))
?zoo
zpp<-zoo(x = select(zpp, -fecha) order.by=zpp$fecha)
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
autoplot(zpp)
zpp<-pp.df %>%
select(fecha, -anyo, -mes, ends_with("total")) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -fecha)
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
autoplot(zpp)
autoplot(zpp) + facet_free()
zpp<-pp.df %>%
select(fecha, -anyo, -mes, starts_with("GOIL")) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -fecha)
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
autoplot(zpp) + facet_free()
autoplot(zpp) + facet_free() + geom_smooth()
dftemp<-read.xlsx(xls.file, sheet="GLPs", startRow = 6)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<-c("anyo", "mes", "GLP.envasado", "GLP.granel", "GLP.automocion", "GLP.otros", "GLP.total")
pp.df<-dftemp
dftemp<-read.xlsx(xls.file, sheet = "Gasolinas", startRow = 6, cols = 1:11)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GSNA.GS97','GSNA.GS95','GSNA.GS98','GSNA.bioetanol','GSNA.mezcla',
'GSNA.auto','GSNA.aviacion','GSNA.otras','GSNA.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Querosenos", startRow = 6, cols = 1:5)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','KERO.aviacion','KERO.otros','KERO.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Gasoleos", startRow = 6, cols = 1:10)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','GOIL.goa','GOIL.biodiesel','GOIL.biomezcla',
'GOIL.auto','GOIL.gob','GOIL.goc','GOIL.otros','GOIL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Fueloleos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','FUEL.fo1','FUEL.fo2','FUEL.fobia',
'FUEL.otros','FUEL.total')
pp.df<-merge(pp.df, dftemp)
dftemp<-read.xlsx(xls.file, sheet = "Otros Productos", startRow = 6, cols = 1:7)
dftemp<-filter(dftemp, Mes != "")
names(dftemp)<- c('anyo','mes','OTROS.lubricantes','OTROS.asfalto',
'OTROS.coque','OTROS.otros','OTROS.total')
pp.df<-merge(pp.df, dftemp)
pp.df<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything()) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -c(1:2))
pp.df<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything()) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -c(1:2))
dftemp<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything()) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -c(1:2))
dftemp<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything())
View(dftemp)
dftemp<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything()) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -c(1:3))
pp.df<- pp.df %>%
mutate_each(funs(ch2num = ifelse(is.na(.), NA, as.numeric(.))), -c(1:2)) %>%
filter(mes != "total") %>%
mutate(fecha = as.yearmon(paste(mes, anyo))) %>%
arrange(fecha) %>%
select(fecha, everything()) %>%
mutate_each(funs(consumo2kt=ifelse(is.na(.), NA, ./1000)), -c(1:3))
saveRDS(pp.df, file = 'data/consumos-pp.RDS')
require(dplyr, quietly = TRUE)
require(ggplot2, quietly = TRUE)
require(tidyr, quietly = TRUE)
require(zoo, quietly = TRUE)
pp.df<-readRDS('data/consumos-pp.RDS')
View(pp.df)
zpp<-pp.df %>% select(fecha, -anyo, -mes, starts_with("GOIL"))
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
autoplot(zpp) + facet_free() + geom_smooth()
autoplot(zpp) + facet_free() + scale_x_yearmon() + geom_smooth()
autoplot(zpp, na.rm = TRUE) + facet_free() + scale_x_yearmon() + geom_smooth()
?scale_x_yearmon
autoplot(zpp, na.rm = TRUE) + facet_free() + scale_x_yearmon(format = "%b %Y") + geom_smooth()
autoplot(zpp) + facet_free() + scale_x_yearmon(format = "%b %Y") + geom_smooth(, na.rm = TRUE)
?index
breaks = seq(min(index(zpp)),max(index(zpp)), length.out = n)
index(zpp)
index(zpp)[1]
index(zpp)[NROW(zpp)]
start(zpp)
end(zpp)
start(zpp)-end(zpp)
end(zpp)-start(zpp)
breaks = seq(start(zpp),end(zpp)), length.out = 10)
breaks = seq(start(zpp),end(zpp), length.out = 10)
breaks
seq(0,1,1/12)
?seq
end(zpp)-start(zpp)
(end(zpp)-start(zpp))*12
seq.int(0,(end(zpp)-start(zpp))*12, length.out = 10)
seq.int(0,(end(zpp)-start(zpp))*12, length.out = 10)/12
start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 10)/12
start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 12)/12
breaks.zpp = start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 12)/12
breaks.zpp = start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 12)/12
autoplot(zpp) + facet_free() + scale_x_yearmon(breaks=breaks.zpp, format = "%b %Y") + geom_smooth(na.rm = TRUE)
shiny::runApp()
names(pp.df)
names(pp.df)[3:NCOL(pp.df)]
names(pp.df)[4:NCOL(pp.df)]
?separate
strsplit(names(pp.df)[4:NCOL(pp.df)],".")
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[1]
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[,1]
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[][1]
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[[1]]
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[[[1]]]
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[[1]]
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")
strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]")[[]][1]
as.character(strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]"))
?strsplit
unlist(strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]"))
unlist(strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]"))[ c(TRUE,FALSE) ]
unique(unlist(strsplit(names(pp.df)[4:NCOL(pp.df)],"[.]"))[ c(TRUE,FALSE) ])
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
shiny::runApp()
names(pp.df)[4:NCOL(pp.df)]
products.pp<-names(pp.df)[4:NCOL(pp.df)]
grepl("^GLP", products.p)
grepl("^GLP", products.pp)
grep("^GLP", products.pp)
products.pp[grep("^GLP", products.pp)]
familia.list
paste0("^",familia.list)
products.pp[grep(paste0("^",familia.list), products.pp)]
filter(data.frame(x=paste0("^",familia.list)), grepl(x, products.pp))
sapply(paste0("^",familia.list), function(x) grepl(x, products.pp))
lapply(paste0("^",familia.list), function(x) grepl(x, products.pp))
sapply(paste0("^",familia.list), function(x) grepl(x, products.pp))
products.pp[sapply(paste0("^",familia.list), function(x) grepl(x, products.pp))]
products.pp[sapply(paste0("^","GLP"), function(x) grepl(x, products.pp))]
products.pp[grepl(paste0("^","GLP"), products.pp)]
products.pp[grep(paste0("^","GLP"), products.pp)]
product1.list<-""
for(f in familia.list){
product1.list<-c(product1.list, products.pp[grep(paste0("^",f), products.pp)])
}
product1.list
product1.list<-NULL
for(f in familia.list){
product1.list<-c(product1.list, products.pp[grep(paste0("^",f), products.pp)])
}
product1.list
product1.list<-NULL
for(f in c('GLP', 'GOIL')){
product1.list<-c(product1.list, products.pp[grep(paste0("^",f), products.pp)])
}
product1.list
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?select
names(pp.df)
names(pp.df)[seq.int(4,36,5)]
zpp<-pp.df %>% select(fecha, -anyo, -mes, one_of(names(pp.df)[seq.int(4,36,5)]))
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
breaks.zpp = start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 12)/12
autoplot(zpp) + facet_free() + scale_x_yearmon(breaks=breaks.zpp, format = "%b %Y") + geom_smooth(na.rm = TRUE)
autoplot(zpp,na.rm = TRUE) + facet_free() + scale_x_yearmon(breaks=breaks.zpp, format = "%b %Y") + geom_smooth(na.rm = TRUE)
?sample
sample(4,36,4)
sample(4:36,4)
zpp<-pp.df %>% select(fecha, -anyo, -mes, one_of(names(pp.df)[sample(4:38,4)]))
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
breaks.zpp = start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 12)/12
autoplot(zpp,na.rm = TRUE) + facet_free() + scale_x_yearmon(breaks=breaks.zpp, format = "%b %Y") + geom_smooth(na.rm = TRUE)
zpp<-pp.df %>% select(fecha, -anyo, -mes, one_of(names(pp.df)[sample(4:38,4)]))
zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)
breaks.zpp = start(zpp)+seq.int(0,(end(zpp)-start(zpp))*12, length.out = 12)/12
autoplot(zpp,na.rm = TRUE) + facet_free() + scale_x_yearmon(breaks=breaks.zpp, format = "%b %Y") + geom_smooth(na.rm = TRUE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
nor<-sapply(window(zpp, start = start(zpp), end = start(zpp)+11/12),function(x) 100/mean(x))
nor
?scale.zoo
?scale
nor<-sapply(window(zpp, start = start(zpp), end = start(zpp)+11/12),function(x) ifelse(is.na(100/mean(x)), 1, 100/mean(x)))
nor
shiny::runApp()
nor<-sapply(window(zpp, start = start(zpp), end = start(zpp)+11/12),function(x) 100/mean(x))
nor
is.na(nor)
head(zpp[is.na(nor)])
head(zpp[3])
head(zpp[,3])
is.na(nor)
na.omit(nor)
is.na(nor)
names(is.na(nor))
names(nor)
names(nor)[is.na(nor)]
zpp[names(nor)[is.na(nor)]]
zpp[,names(nor)[is.na(nor)]]
zpp[,names(nor)[is.na(nor)]]<-NULL
head(zpp[,names(nor)[is.na(nor)]])
zpp[,names(nor)[is.na(nor)], drop = FALSE]<-NULL
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
`
shiny::runApp()
source('~/RProjects/shinyCORES/global.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
