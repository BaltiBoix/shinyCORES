{
    "contents" : "shinyServer(function(input, output) {\n      \n      output$provincia.uisel<-renderUI({\n            provincia.list<-df %>% filter(CCAA==input$CCAA.sel) %>% select(Provincia) %>% distinct()\n            provincia.list<-as.character(provincia.list[,1])\n            selectInput(\"provincia.sel\", \n                        label = h4(\"Provincia\"), \n                        choices = provincia.list,\n                        selected = 'Total',\n                        multiple = FALSE)\n      })\n      \n      output$plot <- renderPlot({\n            norm.Sel<-input$norm.sel\n            CCAA.Sel<-input$CCAA.sel\n            if(is.null(input$provincia.sel)){\n                  Provincia.Sel<-'Total'\n            }else{\n                  Provincia.Sel<-input$provincia.sel\n            }\n            prod.Sel<-input$prod.sel\n            xlim.Sel<-c(as.yearmon(paste0(input$fechas.sel[1],\"-01-01\")), \n                        as.yearmon(paste0(input$fechas.sel[2],\"-01-01\")))\n            if(fechas.rango[2] == input$fechas.sel[2]){xlim.Sel[2]<-df$fecha[nrow(df)]}\n            iprod.Sel<-which(names(df) %in% prod.Sel, arr.ind=T)\n            if(length(iprod.Sel)>0){\n                  z<-df %>% filter(CCAA==CCAA.Sel & Provincia==Provincia.Sel) %>% select(1, iprod.Sel)\n                  if(NROW(z)>0){\n                        z<-zoo(x=z[,2:NCOL(z)], order.by = z[,1])\n                        if(norm.Sel){\n                              nor<-sapply(window(z, start = xlim.Sel[1], end = xlim.Sel[1]+11/12),function(x) 100/mean(x))\n                              if(NCOL(z)>1) nor<-matrix(rep(nor,each=NROW(z)),ncol=NCOL(z))\n                              z<-z * nor\n                        }\n\n                        if(input$onefacet2.sel){\n                              g<-autoplot(z, na.rm = TRUE, facets = NULL)\n                        }else{\n                              g<-autoplot(z, na.rm = TRUE)\n                              if(NCOL(z)>1) g<-g + facet_free()\n                        }\n                        g<-g + scale_x_yearmon(limits=xlim.Sel)\n                        g<-g + geom_line(size=0.5, na.rm = TRUE)\n                        g<-g + geom_smooth(se=F, size=1, na.rm = TRUE)\n                        g<-g + xlab(\"Fecha\")+ggtitle(paste0(CCAA.Sel, \"-\", Provincia.Sel))\n                        if(norm.Sel) {\n                              g<-g + ylab(\"%\")\n                        }else{\n                              g<-g + ylab(\"kt/mes\")\n                        }\n                        g<-g + theme(axis.text = element_text(size = 12),\n                                     plot.title = element_text(size = 16, face='bold'),\n                                     strip.text = element_text(size = 16, face='bold'),\n                                     axis.title.x = element_text(size = 14),\n                                     axis.title.y = element_text(size = 14),\n                                     panel.border = element_rect(linetype = 'solid', color = 'red', fill = NA),\n                                     strip.background = element_rect(linetype = 'solid', color = 'darkred', fill = 'gray'),\n                                     panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n                                     panel.grid.minor = element_blank(),\n                                     legend.position = 'bottom',\n                                     legend.text = element_text(size = 14),\n                                     legend.title=element_blank())\n                        \n                        g\n                  }\n            }\n      }, height = 750, width = 'auto')\n\n      output$provincia1.uisel<-renderUI({\n            provincia1.list<-df %>% filter(CCAA %in% input$CCAA1.sel) %>% select(Provincia) %>% distinct()\n            provincia1.list<-as.character(provincia1.list[,1])\n            selectInput(\"provincia1.sel\", \n                        label = h4(\"Provincia\"), \n                        choices = provincia1.list,\n                        selected = 'Total',\n                        multiple = TRUE)\n      })\n      \n      output$plot1 <- renderPlot({\n            \n            norm.Sel<-input$norm1.sel\n            CCAA.Sel<-input$CCAA1.sel\n            onefacet.Sel<-input$onefacet.sel\n            xlim.Sel<-c(as.yearmon(paste0(input$fechas1.sel[1],\"-01-01\")), \n                        as.yearmon(paste0(input$fechas1.sel[2],\"-01-01\")))\n            if(fechas.rango[2] == input$fechas1.sel[2]){xlim.Sel[2]<-df$fecha[nrow(df)]}\n            if(is.null(input$provincia1.sel)){\n                  Provincia.Sel<-'Total'\n            }else{\n                  Provincia.Sel<-input$provincia1.sel\n            }\n            prod.Sel<-input$prod1.sel\n            \n            iprod.Sel<-which(names(df) == prod.Sel)            \n            z<-df %>% \n                  filter(CCAA %in% CCAA.Sel) %>% \n                  filter(Provincia %in% Provincia.Sel) %>% \n                  select(1:3, psel=iprod.Sel) %>%\n                  mutate(CCAA.Prov=paste0(CCAA,'.',Provincia)) %>%\n                  select(-CCAA, -Provincia) %>%\n                  spread(key=CCAA.Prov, value=psel)\n            \n            if(NROW(z)>0) {\n                  z<-zoo(x=z[,2:NCOL(z)], order.by = z[,1])\n                  \n                  if(norm.Sel){\n                        nor<-sapply(window(z, start = xlim.Sel[1], end = xlim.Sel[1]+11/12),function(x) 100/mean(x))\n                        if(NCOL(z)>1) nor<-matrix(rep(nor,each=NROW(z)),ncol=NCOL(z))\n                        z<-z * nor\n                  }\n                  \n                  if(onefacet.Sel){\n                        g<-autoplot(z, na.rm = TRUE, facets = NULL)\n                  }else{\n                        g<-autoplot(z, na.rm = TRUE)\n                        if(NCOL(z)>1) g<-g + facet_free()\n                  }\n                  g<-g + scale_x_yearmon(limits=xlim.Sel)\n                  g<-g + geom_line(size=0.5, na.rm = TRUE)\n                  g<-g + geom_smooth(se=F, size=1, na.rm = TRUE)\n                  g<-g + xlab(\"Fecha\")\n                  if(norm.Sel){ \n                        g<-g + ylab(\"%\")\n                  }else{\n                        g<-g + ylab(\"kt/mes\")\n                  }\n                  g<-g + ggtitle(prod.Sel)\n                  g<-g + theme(axis.text = element_text(size = 12),\n                               plot.title = element_text(size = 16, face='bold'),\n                               strip.text = element_text(size = 14, face='bold'),\n                               axis.title.x = element_text(size = 14),\n                               axis.title.y = element_text(size = 14),\n                               panel.border = element_rect(linetype = 'solid', color = 'red', fill = NA),\n                               strip.background = element_rect(linetype = 'solid', color = 'darkred', fill = 'gray'),\n                               panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n                               panel.grid.minor = element_blank(),\n                               legend.position = 'bottom',\n                               legend.text = element_text(size = 14),\n                               legend.title=element_blank())\n                  g\n            }\n      }, height = 750, width = 'auto')\n\n      output$producto.uisel<-renderUI({\n            product1.list<-NULL\n            for(f in input$familia.sel){\n                  product1.list<-c(product1.list, products.pp[grep(paste0(\"^\",f), products.pp)])\n            }\n            selectInput(\"product1.sel\", \n                        label = h4(\"Producto\"), \n                        choices = product1.list,\n                        selected = c('GOIL.total', 'GSNA.total'),\n                        multiple = TRUE)\n      })\n      \n      output$plot2 <- renderPlot({\n            \n            if(!is.null(input$product1.sel)){\n                  norm.Sel<-input$norm2.sel\n                  xlim.Sel<-c(as.yearmon(paste0(input$fechas2.sel[1],\"-01-01\")), \n                              as.yearmon(paste0(input$fechas2.sel[2],\"-01-01\")))\n                  if(fechas1.rango[2] == input$fechas2.sel[2]){xlim.Sel[2]<-pp.df$fecha[nrow(pp.df)]}\n                  \n                  zpp<-pp.df %>% select(fecha, -anyo, -mes, one_of(input$product1.sel))\n                  \n                  zpp<-zoo(x = select(zpp, -fecha), order.by=zpp$fecha)\n                  \n                  if(norm.Sel){\n                        nor<-sapply(window(zpp, start = xlim.Sel[1], end = xlim.Sel[1]+11/12),\n                                    function(x) ifelse(is.na(100/mean(x)), 1, 100/mean(x)))\n                        if(NCOL(zpp)>1) nor<-matrix(rep(nor,each=NROW(zpp)),ncol=NCOL(zpp))\n                        zpp<-zpp * nor\n                  }\n                  #breaks.zpp = xlim.Sel[1]+seq.int(0,(xlim.Sel[2]-xlim.Sel[1])*12, length.out = 12)/12\n\n                  if(input$onefacet1.sel){\n                        g<-autoplot(zpp, na.rm = TRUE, facets = NULL)\n                  }else{\n                        g<-autoplot(zpp, na.rm = TRUE)\n                        if(NCOL(zpp)>1) g<-g + facet_free()\n                  }\n                  g<-g + scale_x_yearmon(limits=xlim.Sel, format = \"%b %Y\") #,breaks=breaks.zpp\n                  g<-g + geom_line(size=0.5, na.rm = TRUE)\n                  g<-g + geom_smooth(se=F, size=1, na.rm = TRUE)\n                  g<-g + xlab(\"Fecha\")+ggtitle(\"Consumo mensual\")\n                  if(norm.Sel) {\n                        g<-g + ylab(\"%\")\n                  }else{\n                        g<-g + ylab(\"kt/mes\")\n                  }\n                  g<-g + theme(axis.text = element_text(size = 12),\n                               plot.title = element_text(size = 16, face='bold'),\n                               strip.text = element_text(size = 16, face='bold'),\n                               axis.title.x = element_text(size = 14),\n                               axis.title.y = element_text(size = 14),\n                               panel.border = element_rect(linetype = 'solid', color = 'red', fill = NA),\n                               strip.background = element_rect(linetype = 'solid', color = 'darkred', fill = 'gray'),\n                               panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n                               panel.grid.minor = element_blank(),\n                               legend.position = 'bottom',\n                               legend.text = element_text(size = 14),\n                               legend.title=element_blank())\n                  \n                  g\n                  \n            }\n      }, height = 750, width = 'auto')\n      \n      output$producto1.uisel<-renderUI({\n            product2.list<-NULL\n            for(f in input$familia1.sel){\n                  product2.list<-c(product2.list, products.pp[grep(paste0(\"^\",f), products.pp)])\n            }\n            selectInput(\"product2.sel\", \n                        label = h4(\"Producto\"), \n                        choices = product2.list,\n                        selected = 'GOIL.total',\n                        multiple = FALSE)\n      })\n      \n      output$plot3 <- renderPlot({\n            \n            if(!is.null(input$product2.sel)){\n                  xlim.Sel<-c(as.yearmon(paste0(input$fechas3.sel[1],\"-01-01\")), \n                              as.yearmon(paste0(input$fechas3.sel[2],\"-01-01\")))\n                  if(fechas1.rango[2] == input$fechas3.sel[2]){xlim.Sel[2]<-pp.df$fecha[nrow(pp.df)]}\n                  \n                  z<-pp.df %>% select(fecha, -anyo, -mes, one_of(input$product2.sel))\n                  \n                  z<-zoo(x = select(z, -fecha), order.by=z$fecha)\n                  \n                  z<-na.locf(z)\n                  \n                  fit<-seas(as.ts(z), forecast.save = \"fct\", forecast.probability = 0.95)\n                  \n                  zz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),\n                                  original=drop(coredata(original(fit))),\n                                  stringsAsFactors = FALSE) \n                  \n                  zz<-data.frame(fecha=as.character(as.yearmon(time(final(fit)))),\n                                 outlier=coredata(outlier(fit)),\n                                 final=coredata(final(fit)), \n                                 trend=coredata(trend(fit)),\n                                 stringsAsFactors = FALSE) \n\n                  zz<- left_join(zz, zz0, by='fecha')\n                  \n                  zzf<-data.frame(fecha=as.character(as.yearmon(time(series(fit, 'forecast.forecasts')))), \n                                  series(fit, 'forecast.forecasts'),\n                                  stringsAsFactors = FALSE)\n                  \n                  zz<- full_join(zz, zzf, by='fecha') %>% mutate(fecha=as.yearmon(fecha))\n\n                  g<-ggplot(zz, na.rm = TRUE)\n                  g<-g + geom_line(aes(x=fecha, y=original, color='original'), size=0.5, na.rm = TRUE)\n                  g<-g + geom_text(aes(x=fecha, y=original, label=outlier), na.rm = TRUE)\n                  g<-g + geom_label(aes(x=fecha, y=original, label=outlier, color='outlier'), na.rm = TRUE)\n                  g<-g + geom_line(aes(x=fecha, y=final, color='final'), size=1, na.rm = TRUE)\n                  g<-g + geom_line(aes(x=fecha, y=trend, color='trend'), size=1.5, na.rm = TRUE)\n                  g<-g + geom_line(aes(x=fecha, y=forecast, color='forecast'), size=1, na.rm = TRUE)\n                  g<-g + geom_ribbon(aes(x=fecha, ymin = lowerci, ymax = upperci), fill = \"grey70\", alpha=0.5)\n                  g<-g + scale_color_manual(values=c('original'='chartreuse4', 'final'='black', 'trend'='blue', 'forecast'='red', 'outlier'='orange1'),\n                                            breaks=c('original', 'final', 'trend', 'forecast', 'outlier')) \n                  g<-g + ylab(\"kt\")+ggtitle(\"Consumo mensual\")\n                  g<-g + scale_x_yearmon(limits=xlim.Sel)\n                  g<-g + theme(panel.background = element_rect(colour = \"red\"),\n                               plot.title = element_text(size = 16, face='bold', color='blue'),\n                               panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n                               axis.text.x = element_text(size = 14),\n                               axis.title.x = element_blank(),\n                               axis.title.y = element_text(size = 14),\n                               legend.position = 'bottom',\n                               legend.text = element_text(size = 14),\n                               legend.title=element_blank())\n                  g\n                  \n            }\n      }, height = 750, width = 'auto')\n\n})\n",
    "created" : 1458897246025.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2821006487",
    "id" : "E952AB7B",
    "lastKnownWriteTime" : 1459711210,
    "path" : "~/RProjects/shinyCORES/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}