{
    "contents" : "shinyServer(function(input, output) {\n      \n      output$provincia.uisel<-renderUI({\n            provincia.list<-df %>% filter(CCAA==input$CCAA.sel) %>% select(Provincia) %>% distinct()\n            provincia.list<-as.character(provincia.list[,1])\n            selectInput(\"provincia.sel\", \n                        label = h4(\"Provincia\"), \n                        choices = provincia.list,\n                        selected = 'Total',\n                        multiple = FALSE)\n      })\n      \n      output$plot <- renderPlot({\n            norm.Sel<-input$norm.sel\n            CCAA.Sel<-input$CCAA.sel\n            if(is.null(input$provincia.sel)){\n                  Provincia.Sel<-'Total'\n            }else{\n                  Provincia.Sel<-input$provincia.sel\n            }\n            prod.Sel<-input$prod.sel\n            xlim.Sel<-c(as.yearmon(paste0(input$fechas.sel[1],\"-01-01\")), \n                        as.yearmon(paste0(input$fechas.sel[2],\"-01-01\")))\n            if(fechas.rango[2] == input$fechas.sel[2]){xlim.Sel[2]<-df$fecha[nrow(df)]}\n            iprod.Sel<-which(names(df) %in% prod.Sel, arr.ind=T)\n            if(length(iprod.Sel)>0){\n                  z<-df %>% filter(CCAA==CCAA.Sel & Provincia==Provincia.Sel) %>% select(1, iprod.Sel)\n                  if(NROW(z)>0){\n                        z<-zoo(x=z[,2:NCOL(z)], order.by = z[,1])\n                        if(norm.Sel){\n                              nor<-sapply(window(z, start = xlim.Sel[1], end = xlim.Sel[1]+11/12),function(x) 100/mean(x))\n                              if(NCOL(z)>1) nor<-matrix(rep(nor,each=NROW(z)),ncol=NCOL(z))\n                              z<-z * nor\n                        }\n                        g<-autoplot(z, na.rm = TRUE)\n                        if(NCOL(z)>1) g<-g + facet_free()\n                        g<-g + scale_x_yearmon(limits=xlim.Sel)\n                        g<-g + geom_line(size=0.5, na.rm = TRUE)\n                        g<-g + geom_smooth(se=F, size=1, na.rm = TRUE)\n                        g<-g + xlab(\"Fecha\")+ggtitle(paste0(CCAA.Sel, \"-\", Provincia.Sel))\n                        if(norm.Sel) {\n                              g<-g + ylab(\"%\")\n                        }else{\n                              g<-g + ylab(\"kt/mes\")\n                        }\n                        g<-g + theme(axis.text = element_text(size = 12),\n                                     plot.title = element_text(size = 16, face='bold'),\n                                     strip.text = element_text(size = 16, face='bold'),\n                                     axis.title.x = element_text(size = 14),\n                                     axis.title.y = element_text(size = 14),\n                                     panel.border = element_rect(linetype = 'solid', color = 'red', fill = NA),\n                                     strip.background = element_rect(linetype = 'solid', color = 'darkred', fill = 'gray'),\n                                     panel.grid.major = element_line(colour = \"grey\"),\n                                     panel.grid.minor = element_blank())\n                        g\n                  }\n            }\n      }, height = 800, width = 'auto')\n\n      output$provincia1.uisel<-renderUI({\n            provincia1.list<-df %>% filter(CCAA %in% input$CCAA1.sel) %>% select(Provincia) %>% distinct()\n            provincia1.list<-as.character(provincia1.list[,1])\n            selectInput(\"provincia1.sel\", \n                        label = h4(\"Provincia\"), \n                        choices = provincia1.list,\n                        selected = 'Total',\n                        multiple = TRUE)\n      })\n      \n      output$plot1 <- renderPlot({\n            \n            norm.Sel<-input$norm1.sel\n            CCAA.Sel<-input$CCAA1.sel\n            onefacet.Sel<-input$onefacet.sel\n            xlim.Sel<-c(as.yearmon(paste0(input$fechas1.sel[1],\"-01-01\")), \n                        as.yearmon(paste0(input$fechas1.sel[2],\"-01-01\")))\n            if(fechas.rango[2] == input$fechas1.sel[2]){xlim.Sel[2]<-df$fecha[nrow(df)]}\n            if(is.null(input$provincia1.sel)){\n                  Provincia.Sel<-'Total'\n            }else{\n                  Provincia.Sel<-input$provincia1.sel\n            }\n            prod.Sel<-input$prod1.sel\n            \n            iprod.Sel<-which(names(df) == prod.Sel)            \n            z<-df %>% \n                  filter(CCAA %in% CCAA.Sel) %>% \n                  filter(Provincia %in% Provincia.Sel) %>% \n                  select(1:3, psel=iprod.Sel) %>%\n                  mutate(CCAA.Prov=paste0(CCAA,'.',Provincia)) %>%\n                  select(-CCAA, -Provincia) %>%\n                  spread(key=CCAA.Prov, value=psel)\n            \n            if(NROW(z)>0) {\n                  z<-zoo(x=z[,2:NCOL(z)], order.by = z[,1])\n                  \n                  if(norm.Sel){\n                        nor<-sapply(window(z, start = xlim.Sel[1], end = xlim.Sel[1]+11/12),function(x) 100/mean(x))\n                        if(NCOL(z)>1) nor<-matrix(rep(nor,each=NROW(z)),ncol=NCOL(z))\n                        z<-z * nor\n                  }\n                  \n                  if(onefacet.Sel){\n                        g<-autoplot(z, na.rm = TRUE, facets = NULL)\n                  }else{\n                        g<-autoplot(z, na.rm = TRUE)\n                        if(NCOL(z)>1) g<-g + facet_free()\n                  }\n                  g<-g + scale_x_yearmon(limits=xlim.Sel)\n                  g<-g + geom_line(size=0.5, na.rm = TRUE)\n                  g<-g + geom_smooth(se=F, size=1, na.rm = TRUE)\n                  g<-g + xlab(\"Fecha\")\n                  if(norm.Sel){ \n                        g<-g + ylab(\"%\")\n                  }else{\n                        g<-g + ylab(\"kt/mes\")\n                  }\n                  g<-g + ggtitle(prod.Sel)\n                  g<-g + theme(axis.text = element_text(size = 12),\n                               plot.title = element_text(size = 16, face='bold'),\n                               strip.text = element_text(size = 14, face='bold'),\n                               axis.title.x = element_text(size = 14),\n                               axis.title.y = element_text(size = 14),\n                               panel.border = element_rect(linetype = 'solid', color = 'red', fill = NA),\n                               strip.background = element_rect(linetype = 'solid', color = 'darkred', fill = 'gray'),\n                               panel.grid.major = element_line(colour = \"grey\"),\n                               panel.grid.minor = element_blank(),\n                               legend.position = 'bottom',\n                               legend.text = element_text(size = 14),\n                               legend.title=element_blank())\n                  g\n            }\n      }, height = 800, width = 'auto')\n      \n })\n",
    "created" : 1458897246025.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3142777443",
    "id" : "E952AB7B",
    "lastKnownWriteTime" : 1459016021,
    "path" : "~/RProjects/shinyCORES/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}