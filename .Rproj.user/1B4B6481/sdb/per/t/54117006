{
    "contents" : "require(dplyr, quietly = TRUE)\nrequire(ggplot2, quietly = TRUE)\nrequire(tidyr, quietly = TRUE)\nrequire(zoo, quietly = TRUE)\nrequire(forecast, quietly = TRUE)\nrequire(gridExtra, quietly=TRUE)\nrequire(ggseas, quietly=TRUE)\nrequire(scales, quietly=TRUE)\n\npp.df<-readRDS('data/consumos-pp.RDS')\n\nppg.df<-pp.df %>%\n      gather(key=gen.par, consumo.kt, -c(1:3)) %>%\n      separate(gen.par, into = c(\"familia\", \"producto\"), sep = \"\\\\.\") %>%\n      mutate(tipo='obs') %>%\n      select(fecha, familia, producto, tipo, consumo.kt) \n\nfamilia.list<-unique(ppg.df$familia)\nfor(famItem in familia.list){\n\n      producto.list<-(ppg.df %>% filter(familia==famItem) %>% select(producto) %>% distinct())[,1]\n      for(prodItem in producto.list){\n            \n            z<-ppg.df %>% filter(familia==famItem & producto==prodItem) %>% \n                  select(fecha, consumo.kt) %>%\n                  mutate(consumo.kt = ifelse(is.na(consumo.kt), 0, consumo.kt))\n            z<-zoo(x=z$consumo.kt, order.by = z$fecha)\n            z.stl<-stl(z, s.window = 'periodic', t.window = 13, s.degree = 1, robust = TRUE)\n            n=NROW(z)\n            zz<-data.frame(fecha=as.yearmon(time(z.stl$time.series)), \n                           familia=rep(famItem,n), \n                           producto=rep(prodItem,n), \n                           tipo=rep(\"trend\",n),\n                           consumo.kt=z.stl$time.series[,2])\n            ppg.df<-merge(ppg.df, zz, all = TRUE)\n\n      }\n}\nppg.df<-ppg.df %>% mutate(consumo.kt = ifelse(consumo.kt < 0.001, 0, consumo.kt))\n\n\nxlim.Sel<-c(as.yearmon(paste0(2010,\"-01-01\")), as.yearmon(paste0(2016,\"-01-01\")))\n\nfamItem<-\"GOIL\"\nprodItem<-'total'\n\ndf<-ppg.df %>% filter(familia==famItem & producto==prodItem)\n\ng<-ggplot(data=df, aes(x=fecha, y=consumo.kt, color=tipo, size=tipo))\n#g<-g + facet_wrap(~familia + producto, scales = \"free_y\")\ng<-g + scale_color_manual(values=c(\"red\", \"blue\"), breaks=c(\"obs\", \"trend\"), labels=c(\"Observado\", \"Desestacionalizado\"))\ng<-g + scale_size_manual(values=c(0.25, 1.25), breaks=c(\"obs\", \"trend\"), labels=c(\"Observado\", \"Desestacionalizado\"))\ng<-g + geom_line( na.rm=TRUE)\ng<-g + scale_x_yearmon(limits=xlim.Sel)\ng<-g + ggtitle(paste(\"Consumo mensual\", famItem, prodItem))\ng<-g + theme(panel.background = element_rect(colour = \"red\"),\n             plot.title = element_text(size = 16, face='bold', color='blue'),\n             panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n             legend.position = 'bottom',\n             legend.text = element_text(size = 14),\n             legend.title=element_blank())\n\ndf1<-df %>% filter(tipo==\"trend\") %>% \n      mutate(dif1=consumo.kt-lag(consumo.kt,1)) %>%\n      mutate(dif2=dif1-lag(dif1,1)) %>%\n      select(fecha, dif1, dif2) %>%\n      gather(key=tipo, value=dif.kt, -fecha) %>%\n      mutate(dif.kt = ifelse(abs(dif.kt) < 0.001, NA, dif.kt))\n      \np<-ggplot()\np<-p + geom_bar(data=filter(df1, tipo==\"dif2\"), aes(x=fecha, y=dif.kt, fill=\"dif2\"), stat = \"identity\", alpha=0.5)\np<-p + geom_line(data=filter(df1, tipo==\"dif1\"), aes(x=fecha, y=dif.kt, color=\"dif1\"), size=1)\np<-p + scale_x_yearmon(limits=xlim.Sel)\np<-p + scale_color_manual(values=\"blue\", breaks=\"dif1\", labels=\"Variaci贸n mensual del consumo\")\np<-p + scale_fill_manual(values=\"red\", breaks=\"dif2\", labels=\"velocidad de Variaci贸n mensual del consumo\")\np<-p + theme(panel.background = element_rect(colour = \"red\"),\n             panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n             legend.position = 'bottom',\n             legend.text = element_text(size = 14),\n             legend.title=element_blank())\n\ngrid.arrange(g, p, ncol=1)\n\n\nseasonplot(as.ts(z),ylab=\"Consumo Gasolina t/mes\", xlab=\"Year\", \n           main=\"Seasonal plot: Consumo de gasolina\",\n           year.labels=TRUE, year.labels.left=TRUE, col=1:20, pch=19)\n\nggplot(filter(df, tipo==\"obs\"), \n       aes(x=strftime(fecha, \"%m\"), y=consumo.kt, group=strftime(fecha,format=\"%Y\"), color=strftime(fecha,format=\"%Y\"))) +\n       geom_line()\n\nz<-zoo(x=pp.df$GOIL.total, order.by=pp.df$fecha)\nz<-zoo(x=filter(ppg.df,familia==famItem & producto==prodItem & tipo==\"obs\")[,5], order.by=pp.df$fecha)\nfit<-ets(z, restrict=TRUE)\nzfcast<-forecast(fit, h=12)\nggfcast<-funggcast(z,zfcast)\n\nxlim.Sel<-c(as.yearmon(paste0(2010,\"-01-01\")), as.yearmon(paste0(2017,\"-01-01\")))\ng<-ggplot(data=ggfcast,aes(x=date,y=observed)) \ng<-g+geom_line(col='red', size=1)\ng<-g+geom_line(aes(y=fitted),col='blue')\ng<-g+geom_line(aes(y=forecast))\ng<-g+geom_ribbon(aes(ymin=lo80,ymax=hi80),alpha=.25)\ng<-g+scale_x_yearmon(n=12, limits=xlim.Sel)\ng<-g+scale_y_continuous(name='kt')\ng<-g+ggtitle(paste('ETS Fit to', paste('Consumo mensual', famItem, prodItem), \n             '\\n (black=forecast, blue=fitted, red=data, shadow=80% conf. interval)'))\ng<-g + theme(panel.background = element_rect(colour = \"red\"),\n             plot.title = element_text(size = 16, face='bold', color='blue'),\n             panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n             axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),\n             axis.title.x = element_text(size = 14),\n             legend.position = 'bottom',\n             legend.text = element_text(size = 14),\n             legend.title=element_blank())\ng\n\n#*********************************************************************************************\n\nfamItem<-\"GSNA\"\nprodItem<-'GS97'\n\ndf<-ppg.df %>% filter(familia==famItem & producto==prodItem & tipo==\"obs\")\nz<-zoo(x=filter(ppg.df,familia==famItem & producto==prodItem & tipo==\"obs\")[,5], order.by=pp.df$fecha)\n\nz<-pp.df %>% select(fecha, -anyo, -mes, one_of(\"GLP.otros\"))\nz<-zoo(x = select(z, -fecha), order.by=z$fecha)\n\nfit<-seas(as.ts(z), forecast.save = \"fct\", forecast.probability = 0.95)\n\n#ggsdc(df, aes(x=fecha, y=consumo.kt), method = 'seas')+ geom_line() + scale_x_yearmon()\n\n#data.frame(fecha=as.yearmon(index(outlier(fit))), outliers=coredata(outlier(fit))) %>% filter(!is.na(outliers))\n\nzz0<-data.frame(fecha=as.character(as.yearmon(time(original(fit)))),\n               original=drop(coredata(original(fit))),\n               stringsAsFactors = FALSE) \n\nzz<-data.frame(fecha=as.character(as.yearmon(time(final(fit)))),\n               outlier=coredata(outlier(fit)),\n               final=coredata(final(fit)), \n               trend=coredata(trend(fit)),\n               stringsAsFactors = FALSE) \nzz<- left_join(zz, zz0, by='fecha')\n\nzzf<-data.frame(fecha=as.character(as.yearmon(time(series(fit, 'forecast.forecasts')))), \n                series(fit, 'forecast.forecasts'),\n                stringsAsFactors = FALSE)\n\nzz<- full_join(zz, zzf) %>% mutate(fecha=as.yearmon(fecha))\n\ng<-ggplot(zz)\ng<-g + geom_line(aes(x=fecha, y=original, color='original'), size=0.5)\ng<-g + geom_text(aes(x=fecha, y=original, label=outlier))\ng<-g + geom_label(aes(x=fecha, y=original, label=outlier, color='outlier'))\ng<-g + geom_line(aes(x=fecha, y=final, color='final'), size=1)\ng<-g + geom_line(aes(x=fecha, y=trend, color='trend'), size=1.5)\ng<-g + geom_line(aes(x=fecha, y=forecast, color='forecast'), size=1)\ng<-g + geom_ribbon(aes(x=fecha, ymin = lowerci, ymax = upperci), fill = \"grey70\", alpha=0.5)\ng<-g + scale_color_manual(values=c('original'='chartreuse4', 'final'='black', 'trend'='blue', 'forecast'='red', 'outlier'='orange1'),\n                          breaks=c('original', 'final', 'trend', 'forecast', 'outlier')) \ng<-g + scale_x_yearmon(limits=c(zz[1,1], zz[NROW(zz),1]))\ng<-g + theme(panel.background = element_rect(colour = \"red\"),\n             plot.title = element_text(size = 16, face='bold', color='blue'),\n             panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n             axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),\n             axis.title.x = element_blank(),\n             legend.position = 'bottom',\n             legend.text = element_text(size = 14),\n             legend.title=element_blank())\ng\n\nmonthplot(fit)\n\nzzz<- zz %>% mutate(mes=factor(format(fecha, \"%B\"), levels = format(ISOdate(2000, 1:12, 1), \"%B\")))\n\ng<-ggplot(zzz, aes(x=fecha, y=original))\ng<-g + geom_line(colour='blue')\ng<-g + facet_wrap(~ mes, nrow=1)\ng<-g + stat_smooth(method = \"lm\", formula = y ~ 1, se = FALSE, colour = \"blue\")\ng<-g + scale_x_yearmon(limits=c(zz[1,1], zz[NROW(zz),1]))\ng<-g + theme(panel.background = element_rect(colour = \"red\"),\n             plot.title = element_text(size = 16, face='bold', color='blue'),\n             panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n             axis.text.x = element_blank(),\n             axis.title.x = element_blank(),\n             legend.position = 'bottom',\n             legend.text = element_text(size = 14),\n             legend.title=element_blank())\ng\n\nzzz<-zz %>% \n      mutate(dif1=(trend-lag(trend,12))/lag(trend,12)) %>%\n      mutate(dif2=dif1-lag(dif1,1))\n\ng<-ggplot(zzz, aes(x=fecha, y=dif1))\ng<-g + geom_line(aes(colour='dif1'))\ng<-g + geom_bar(aes(x=fecha, y=dif2, fill='dif2'), stat = \"identity\", alpha=0.5, position = \"identity\")\ng<-g + geom_hline(yintercept = 0, color='chartreuse4')\ng<-g + scale_x_yearmon()\ng<-g + scale_y_continuous(labels=percent)\ng<-g + scale_color_manual(values=c('dif1'='blue'), labels = 'variaci贸n anual del consumo')\ng<-g + scale_fill_manual(values=c('dif2'='chartreuse4'), labels = 'velocidad de variaci贸n anual del consumo')\ng<-g + scale_x_yearmon()\ng<-g + ggtitle(paste('Consumo mensual', famItem, prodItem))\ng<-g + theme(panel.background = element_rect(colour = \"red\"),\n             plot.title = element_text(size = 16, face='bold', color='blue'),\n             panel.grid.major= element_line(size = 0.25, colour = \"red\", linetype = \"dotted\"),\n             axis.text.x = element_text(size = 14, angle = 45, vjust = 1, hjust = 1),\n             axis.title.x = element_blank(),\n             legend.position = 'bottom',\n             legend.text = element_text(size = 14),\n             legend.title=element_blank())\ng\n",
    "created" : 1459020962005.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1736185935",
    "id" : "54117006",
    "lastKnownWriteTime" : 1459711026,
    "path" : "~/RProjects/CORES/ShinyCores3.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}